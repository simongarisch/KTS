{"version":"1","records":[{"hierarchy":{"lvl1":"Intro"},"type":"lvl1","url":"/","position":0},{"hierarchy":{"lvl1":"Intro"},"content":"Kotlin is a modern, statically typed programming language developed by JetBrains (the creators of IntelliJ IDEA) and runs on the Java Virtual Machine (JVM).\n\nprintln(\"hello, world\")\n\nvar meaningOfLife = 42\nprintln(meaningOfLife)\n\nfun main(args: Array<String>) {\n    if (args.size > 0) {\n        println(args)\n    }\n    println(\"hello, world\")\n}\n\nval args = emptyArray<String>()\nmain(args)\n\n... all fairly straightforward ...\n\n","type":"content","url":"/","position":1},{"hierarchy":{"lvl1":"Intro","lvl2":"FizzBuzz"},"type":"lvl2","url":"/#fizzbuzz","position":2},{"hierarchy":{"lvl1":"Intro","lvl2":"FizzBuzz"},"content":"\n\nfun Int.isDiv(vararg ints: Int): Boolean {\n    for (i in ints) {\n        if (this % i != 0) {\n            return false\n        }\n    }\n    return true\n}\n\n3.isDiv(2)\n\n6.isDiv(2)\n\nfun fizzBuzz(n: Int): String {\n    if (n.isDiv(3, 5)) {\n        return \"FizzBuzz\"\n    } else if (n.isDiv(3)) {\n        return \"Fizz\"\n    } else if (n.isDiv(5)) {\n        return \"Buzz\"\n    }\n\n    return n.toString()\n}\n\nfor (n in 1..20) {\n    println(fizzBuzz(n))\n}\n\nAlternatively...\n\nThe when expression serves as an expressive alternative to the switch.\n\nfun fizzBuzz2(n: Int): String {\n    when {\n        n.isDiv(3, 5) -> return \"FizzBuzz\"\n        n.isDiv(3) -> return \"Fizz\"\n        n.isDiv(5) -> return \"Buzz\"\n        else -> return n.toString()\n    }\n}\n\nfor (n in 1..20) {\n    println(fizzBuzz2(n))\n}\n\n","type":"content","url":"/#fizzbuzz","position":3}]}